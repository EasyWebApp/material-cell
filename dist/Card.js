//
//  Generated by https://www.npmjs.com/package/amd-bundle
//
(function (factory) {

    if ((typeof define === 'function')  &&  define.amd)
        define('Card', ["web-cell"], factory);
    else if (typeof module === 'object')
        return  module.exports = factory(require('web-cell'));
    else
        return  this['Card'] = factory(this['web-cell']);

})(function (web_cell) {

function merge(base, path) {
  return (base + '/' + path).replace(/\/\//g, '/').replace(/[^/.]+\/\.\.\//g, '').replace(/\.\//g, function (match, index, input) {
    return input[index - 1] === '.' ? match : '';
  });
}

function outPackage(name) {
  return /^[^./]/.test(name);
}

    var require = _require_.bind(null, './');

    function _require_(base, path) {

        var module = _module_[
                outPackage( path )  ?  path  :  ('./' + merge(base, path))
            ],
            exports;

        if (! module.exports) {

            module.exports = { };

            var dependency = module.dependency;

            for (var i = 0;  dependency[i];  i++)
                module.dependency[i] = require( dependency[i] );

            exports = module.factory.apply(
                null,  module.dependency.concat(
                    _require_.bind(null, module.base),  module.exports,  module
                )
            );

            if (exports != null)  module.exports = exports;

            delete module.dependency;  delete module.factory;
        }

        return module.exports;
    }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var _module_ = {
  './index.html': {
    base: '.',
    dependency: [],
    factory: function factory(require, exports, module) {
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _default = "<template>\n    <style>:host {\n  -webkit-tap-highlight-color: transparent;-webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n}\n:host {\n  display: -webkit-flex;display: -ms-flexbox;display: flex;-webkit-flex-direction: column;-ms-flex-direction: column;flex-direction: column;font-size: 16px;font-weight: 400;min-height: 200px;overflow: hidden;width: 330px;z-index: 1;position: relative;background: #ffffff;border-radius: 2px;box-sizing: border-box;\n}\nslot[name=\"media\"]::slotted(*) {\n  background-color: #ff4081;background-repeat: repeat;background-position: 50% 50%;background-size: cover;background-origin: padding-box;background-attachment: scroll;box-sizing: border-box;\n}\nslot[name=\"title\"]::slotted(*) {\n  -webkit-align-items: center;-ms-flex-align: center;align-items: center;color: #000000;display: block;display: -webkit-flex;display: -ms-flexbox;display: flex;-webkit-justify-content: stretch;-ms-flex-pack: stretch;justify-content: stretch;line-height: normal;padding: 16px 16px;-webkit-perspective-origin: 165px 56px;perspective-origin: 165px 56px;-webkit-transform-origin: 165px 56px;transform-origin: 165px 56px;box-sizing: border-box;\n}\n#main::slotted(*) {\n  color: rgba(0, 0, 0, 0.54);font-size: 1rem;line-height: 18px;overflow: hidden;padding: 16px 16px;width: 90%;\n}\nslot[name=\"action\"]::slotted(*) {\n  font-size: 16px;line-height: normal;width: 100%;background-color: transparent;padding: 8px;box-sizing: border-box;\n}\nslot[name=\"action\"]::slotted(*) {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\nslot[name=\"title\"]::slotted(*) {\n  -webkit-flex-grow: 1;-ms-flex-positive: 1;flex-grow: 1;\n}\n:host {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n</style>\n    <slot name=\"title\"></slot>\n    <slot name=\"media\"></slot>\n    <slot id=\"main\"></slot>\n    <slot name=\"action\"></slot>\n</template>\n";
      exports.default = _default;
    }
  },
  './index': {
    base: '.',
    dependency: [],
    factory: function factory(require, exports, module) {
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;

      var _webCell = require('web-cell');

      var _index = _interopRequireDefault(require('./index.html'));

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var CellCard =
      /*#__PURE__*/
      function (_HTMLElement) {
        _inherits(CellCard, _HTMLElement);

        function CellCard() {
          var _this;

          _classCallCheck(this, CellCard);

          (_this = _possibleConstructorReturn(this, _getPrototypeOf(CellCard).call(this))).buildDOM(_index.default);

          return _this;
        }

        return CellCard;
      }(_wrapNativeSuper(HTMLElement));

      exports.default = CellCard;
      (0, _webCell.component)(CellCard);
    }
  },
  'web-cell': {
    exports: web_cell
  }
};

    return require('./index');
});